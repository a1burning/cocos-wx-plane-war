{"version":3,"sources":["assets/Script/BulletControl.ts"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;GAWG;;;;;;;;;;;;;;;;;;;;;AAEH,+CAA0C;AAC1C,+CAA0C;AAEpC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA2C,iCAAY;IAAvD;QAAA,qEAgCC;QA9BG,WAAK,GAAW,GAAG,CAAC;;IA8BxB,CAAC;IA5BG,6BAAK,GAAL;IAEA,CAAC;IAED,8BAAM,GAAN,UAAQ,EAAE;QACN,KAAK;QACL,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAC/B,aAAa;QACb,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;IACL,CAAC;IAED,kBAAkB;IAClB,wCAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QACxB,oBAAoB;QACpB,0BAA0B;QAC1B,IAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE;YACf,2BAA2B;YAC3B,IAAM,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACjE,SAAS,IAAI,SAAS,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC7D,OAAO;YACP,wBAAwB;YACxB,KAAK,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,GAAG,EAAE,CAAC;YACvC,OAAO;YACP,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;IACL,CAAC;IA7BD;QADC,QAAQ;gDACW;IAFH,aAAa;QADjC,OAAO;OACa,aAAa,CAgCjC;IAAD,oBAAC;CAhCD,AAgCC,CAhC0C,EAAE,CAAC,SAAS,GAgCtD;kBAhCoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["/**\n * 子弹控制脚本\n * 创建子弹到层级管理器，逻辑就是，创建子弹，子弹垂直向上运动。\n * 子弹移动到屏幕外面，就销毁，子弹碰到敌机，自己销毁敌机销毁。\n * 所以要创建碰撞组件，Boxcollider\n * 然后创建子弹脚本BulletControl，然后挂载到子弹上面。\n * \n * 玩家创建子弹的逻辑写完，需要进行子弹本身属性的编写\n * 更新的时候，要移动，然后判断是否出了屏幕，如果出了屏幕就销毁。\n * \n * 然后需要添加碰撞检测，如果碰到敌机，销毁敌机，销毁自己。\n */\n\nimport EnemyControl from \"./EnemyControl\";\nimport ScoreControl from \"./ScoreControl\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class BulletControl extends cc.Component {\n    @property\n    speed: number = 800;\n\n    start () {\n\n    }\n\n    update (dt) {\n        // 移动\n        this.node.y += this.speed * dt;\n        // 如果出了屏幕需要销毁\n        if (this.node.y > 820) {\n            this.node.destroy();\n        }\n    }\n\n    // 碰撞检测方法，other是敌人\n    onCollisionEnter(other, self) {\n        // 如果碰到敌人，销毁自己，让敌人死亡\n        // 在敌人的碰撞组件中，添加tag为1，表示是敌人\n        if(other.tag == 1) {\n            // 获取分数节点，调用分数节点的addScore方法\n            const scoreNode = cc.director.getScene().getChildByName('score');\n            scoreNode && scoreNode.getComponent(ScoreControl).addScore();\n            // 销毁敌人\n            // 获取敌人的脚本，调用敌人的脚本的die方法\n            other.getComponent(EnemyControl).die();\n            // 销毁自己\n            this.node.destroy();\n        }\n    }\n}\n"]}